Unity:
https://dev.to/ibmdeveloper/creating-our-multiplayer-game-using-unity3d-creating-a-multiplayer-game-server-part-5-4587

Do something like SyncVars:
https://mirror-networking.gitbook.io/docs/guides/synchronization/syncvars

How to use custom attributes:
https://answers.unity.com/questions/896763/custom-attributes.html

-> add new custom attributes: SyncVar and SyncPosition
-> SyncVar will send changed parameters to all clients
-> SyncPosition does the same, but clients need to use default move functions when syncposition updates to avoid jitter

- Authentication:
-> authenticate by IP address for now
-> maybe encrypted token system later


- Heartbeat command
-> big timestamp

- small timestamps on update commands (inside data)
- objectid as first element of packet, extract and send the rest of data to the obj for object commands

Fixes:
- there's a (big) memory leak in strmem (it does not free allocated memory)
 (currently disabled)


Next up:
 - clock sync and position updates on clientside
 - distribute position updates
 - initial position messaging


Completed/working:
- tcp sockets
- stream compression
- file listing
- var lookup

In progress:
- basic lua interface
- keyvalue interface
- obj lookup
- obj positions
- clock sync




Packet syntax:
Layer0:
[size-byte] [layer1 data]...
255 [size-long] [compressed layer1 data]...
# Todo: change it to size-int for compressed data. we can't support the longs anyway

Layer1:
[cmd-byte][size-2byte][data]...

